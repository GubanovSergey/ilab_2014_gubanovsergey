#include <stdio.h>
#include <math.h>
#include <algorithm>
using namespace std;

double a = 0, b = 0, c = 0, x1 = 0, x2 = 0, d = 0;
unsigned short int n;


int numroots ()
{
	if ((a == 0 && b == 0 && c != 0) || (d<0)) { return 0; }
	else if (a == 0 && b == 0 && c == 0) { return 3; } //Так как больше 2 корней в квадратном уравнении быть не может
	else if (a == 0 || d == 0)
	{
		if (d == 0)
		{
			swap(a, b);
			swap(a, c);
			b = b * 2;
		}
		return 1;
	}
	else return 2;
}

void countroots()
{
	if (n == 1) { x1 = -c / b; }
	else if (n == 2)
	{
		d = sqrt(d);
		x1 = (-b - d) / (2 * a);
		x2 = (-b + d) / (2 * a);
	}
}

void printroots()
{
	switch (n)
	{
        case 0: printf("No roots"); break;
        case 1: printf("There is 1 root: %lg", x1); break;
        case 2: printf("There are 2 roots: %lg and %lg",x1,x2); break;
        default: printf("Uncountable roots amount");
    }
}


int main()
{
	scanf("%lg %lg %lg", &a, &b, &c);
	d = b*b - 4 * a*c;
	n = numroots();
	countroots();
	printroots();
	return 0;
}
